<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.flower.erp.mapper.FlowerStorageMapper">
    
    <resultMap type="FlowerStorage" id="FlowerStorageResult">
        <result property="id"    column="id"    />
        <result property="type"    column="type"    />
        <result property="grade"    column="grade"    />
        <result property="status"    column="status"    />
        <result property="buyingPrice"    column="buying_price"    />
        <result property="exportPrice"    column="export_price"    />
        <result property="discountPrice"    column="discount_price"    />
        <result property="storageStatus"    column="storage_status"    />
        <result property="enterDatetime"    column="enter_datetime"    />
        <result property="takeoutDatetime"    column="takeout_datetime"    />
        <result property="packaging"    column="packaging"    />
        <result property="quantity"    column="quantity"    />
        <result property="quantityIncluded"    column="quantity_included"    />
    </resultMap>

    <sql id="selectFlowerStorageVo">
        select id, type, grade, status, buying_price, export_price, discount_price, storage_status, enter_datetime, takeout_datetime, packaging, quantity, quantity_included, sales_quantity, mode_of_sale from flower_storage

    </sql>

    <select id="selectFlowerStorageList" parameterType="FlowerStorage" resultMap="FlowerStorageResult">
        select fs.id, fd.type, fs.grade, fs.status, fs.buying_price, fs.export_price, fs.discount_price, fs.storage_status, fs.enter_datetime, fs.takeout_datetime, fs.packaging, fs.quantity, fs.quantity_included from flower_storage as fs
        left join flower_detailed as fd
        on fs.detailed_id = fd.id
        <where>  
            <if test="type != null  and type != ''"> and fd.type = #{type}</if>
            <if test="grade != null  and grade != ''"> and fs.grade = #{grade}</if>
            <if test="status != null "> and fs.status = #{status}</if>
            <if test="buyingPrice != null "> and fs.buying_price = #{buyingPrice}</if>
            <if test="exportPrice != null "> and fs.export_price = #{exportPrice}</if>
            <if test="discountPrice != null "> and fs.discount_price = #{discountPrice}</if>
            <if test="storageStatus != null "> and fs.storage_status = #{storageStatus}</if>
            <if test="enterDatetime != null "> and fs.enter_datetime = #{enterDatetime}</if>
            <if test="takeoutDatetime != null "> and fs.takeout_datetime = #{takeoutDatetime}</if>
            <if test="packaging != null  and packaging != ''"> and fs.packaging = #{packaging}</if>
            <if test="quantity != null "> and fs.quantity = #{quantity}</if>
            <if test="quantityIncluded != null "> and fs.quantity_included = #{quantityIncluded}</if>

        </where>
    </select>
    
    <select id="selectFlowerStorageById" parameterType="String" resultMap="FlowerStorageResult">
        <include refid="selectFlowerStorageVo"/>
        where id = #{id}
    </select>
        
    <insert id="insertFlowerStorage" parameterType="FlowerStorage">
        insert into flower_storage
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">id,</if>
            <if test="detailedId != null and detailedId != ''">detailed_id,</if>
            <if test="grade != null">grade,</if>
            <if test="status != null">status,</if>
            <if test="buyingPrice != null">buying_price,</if>
            <if test="exportPrice != null">export_price,</if>
            <if test="discountPrice != null">discount_price,</if>
            <if test="storageStatus != null">storage_status,</if>
            <if test="enterDatetime != null">enter_datetime,</if>
            <if test="takeoutDatetime != null">takeout_datetime,</if>
            <if test="packaging != null">packaging,</if>
            <if test="quantity != null">quantity,</if>
            <if test="quantityIncluded != null">quantity_included,</if>

         </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">#{id},</if>
            <if test="detailedId != null and detailedId != ''">#{detailedId},</if>
            <if test="grade != null">#{grade},</if>
            <if test="status != null">#{status},</if>
            <if test="buyingPrice != null">#{buyingPrice},</if>
            <if test="exportPrice != null">#{exportPrice},</if>
            <if test="discountPrice != null">#{discountPrice},</if>
            <if test="storageStatus != null">#{storageStatus},</if>
            <if test="enterDatetime != null">#{enterDatetime},</if>
            <if test="takeoutDatetime != null">#{takeoutDatetime},</if>
            <if test="packaging != null">#{packaging},</if>
            <if test="quantity != null">#{quantity},</if>
            <if test="quantityIncluded != null">#{quantityIncluded},</if>

         </trim>
    </insert>

    <update id="updateFlowerStorage" parameterType="FlowerStorage">
        update flower_storage
        <trim prefix="SET" suffixOverrides=",">
            <if test="detailedId != null and detailedId != ''">detailed_id = #{detailedId},</if>
            <if test="grade != null">grade = #{grade},</if>
            <if test="status != null">status = #{status},</if>
            <if test="buyingPrice != null">buying_price = #{buyingPrice},</if>
            <if test="exportPrice != null">export_price = #{exportPrice},</if>
            <if test="discountPrice != null">discount_price = #{discountPrice},</if>
            <if test="storageStatus != null">storage_status = #{storageStatus},</if>
            <if test="enterDatetime != null">enter_datetime = #{enterDatetime},</if>
            <if test="takeoutDatetime != null">takeout_datetime = #{takeoutDatetime},</if>
            <if test="packaging != null">packaging = #{packaging},</if>
            <if test="quantity != null">quantity = #{quantity},</if>
            <if test="quantityIncluded != null">quantity_included = #{quantityIncluded},</if>

        </trim>
        where id = #{id}
    </update>

    <delete id="deleteFlowerStorageById" parameterType="String">
        delete from flower_storage where id = #{id}
    </delete>

    <delete id="deleteFlowerStorageByIds" parameterType="String">
        delete from flower_storage where id in 
        <foreach item="id" collection="array" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>
</mapper>